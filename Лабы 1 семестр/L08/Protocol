igor@igor-Aspire-A315-53G:~/Рабочий стол/L08$ ls
Ab.c
igor@igor-Aspire-A315-53G:~/Рабочий стол/L08$ cat Ab.c

#include <stdio.h>

int main() {
  int i,j;
  float detA;
  float A[2][2];
   for (i=0; i<2; i++) {
      for (j=0; j<2; j++) {
         printf("A[%d][%d]= ", i,j);
         scanf("%f", &A[i][j]);
      }
   }
   for (i=0; i<2; i++) {
      for (j=0; j<2; j++) {
         if (j<1)
         printf("%f ", A[i][j]);
         else
         printf("%f \n", A[i][j]);
      }
   }

   detA = (A[0][0]*A[1][1]-A[0][1]*A[1][0]);
   printf("DetA=%f", detA);


     return 0;
}
igor@igor-Aspire-A315-53G:~/Рабочий стол/L08$ gcc -E Ab.c >> Ab.e && ls
Ab.c  Ab.e
igor@igor-Aspire-A315-53G:~/Рабочий стол/L08$ cat Ab.e 
# 1 "Ab.c"
# 1 "<built-in>"
# 1 "<command-line>"
# 31 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 32 "<command-line>" 2
# 1 "Ab.c"

# 1 "/usr/include/stdio.h" 1 3 4
# 27 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 1 3 4
# 33 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 3 4
# 1 "/usr/include/features.h" 1 3 4
# 424 "/usr/include/features.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 1 3 4
# 427 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 428 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/long-double.h" 1 3 4
# 429 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 2 3 4
# 425 "/usr/include/features.h" 2 3 4
# 448 "/usr/include/features.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/gnu/stubs.h" 1 3 4
# 10 "/usr/include/x86_64-linux-gnu/gnu/stubs.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/gnu/stubs-64.h" 1 3 4
# 11 "/usr/include/x86_64-linux-gnu/gnu/stubs.h" 2 3 4
# 449 "/usr/include/features.h" 2 3 4
# 34 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 2 3 4
# 28 "/usr/include/stdio.h" 2 3 4


# 1 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h" 1 3 4
# 216 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h" 3 4

# 216 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h" 3 4
typedef long unsigned int size_t;
# 34 "/usr/include/stdio.h" 2 3 4

# 1 "/usr/include/x86_64-linux-gnu/bits/types.h" 1 3 4
# 27 "/usr/include/x86_64-linux-gnu/bits/types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 28 "/usr/include/x86_64-linux-gnu/bits/types.h" 2 3 4


typedef unsigned char __u_char;
typedef unsigned short int __u_short;
typedef unsigned int __u_int;
typedef unsigned long int __u_long;


typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef signed short int __int16_t;
typedef unsigned short int __uint16_t;
typedef signed int __int32_t;
typedef unsigned int __uint32_t;

typedef signed long int __int64_t;
typedef unsigned long int __uint64_t;



typedef long int __quad_t;
typedef unsigned long int __u_quad_t;



typedef long int __intmax_t;
typedef unsigned long int __uintmax_t;
# 130 "/usr/include/x86_64-linux-gnu/bits/types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/typesizes.h" 1 3 4
# 131 "/usr/include/x86_64-linux-gnu/bits/types.h" 2 3 4


typedef unsigned long int __dev_t;
typedef unsigned int __uid_t;
typedef unsigned int __gid_t;
typedef unsigned long int __ino_t;
typedef unsigned long int __ino64_t;
typedef unsigned int __mode_t;
typedef unsigned long int __nlink_t;
typedef long int __off_t;
typedef long int __off64_t;
typedef int __pid_t;
typedef struct { int __val[2]; } __fsid_t;
typedef long int __clock_t;
typedef unsigned long int __rlim_t;
typedef unsigned long int __rlim64_t;
typedef unsigned int __id_t;
typedef long int __time_t;
typedef unsigned int __useconds_t;
typedef long int __suseconds_t;

typedef int __daddr_t;
typedef int __key_t;


typedef int __clockid_t;


typedef void * __timer_t;


typedef long int __blksize_t;


typedef long int __blkcnt_t;
typedef long int __blkcnt64_t;


typedef unsigned long int __fsblkcnt_t;
typedef unsigned long int __fsblkcnt64_t;


typedef unsigned long int __fsfilcnt_t;
typedef unsigned long int __fsfilcnt64_t;


typedef long int __fsword_t;

typedef long int __ssize_t;


typedef long int __syscall_slong_t;

typedef unsigned long int __syscall_ulong_t;


typedef __off64_t __loff_t;
typedef char *__caddr_t;


typedef long int __intptr_t;


typedef unsigned int __socklen_t;



typedef int __sig_atomic_t;
# 36 "/usr/include/stdio.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/types/__FILE.h" 1 3 4


struct _IO_FILE;
typedef struct _IO_FILE __FILE;
# 37 "/usr/include/stdio.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h" 1 3 4


struct _IO_FILE;


typedef struct _IO_FILE FILE;
# 38 "/usr/include/stdio.h" 2 3 4


# 1 "/usr/include/x86_64-linux-gnu/bits/libio.h" 1 3 4
# 35 "/usr/include/x86_64-linux-gnu/bits/libio.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/_G_config.h" 1 3 4
# 19 "/usr/include/x86_64-linux-gnu/bits/_G_config.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h" 1 3 4
# 20 "/usr/include/x86_64-linux-gnu/bits/_G_config.h" 2 3 4

# 1 "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h" 1 3 4
# 13 "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h" 3 4
typedef struct
{
  int __count;
  union
  {
    unsigned int __wch;
    char __wchb[4];
  } __value;
} __mbstate_t;
# 22 "/usr/include/x86_64-linux-gnu/bits/_G_config.h" 2 3 4


typedef struct
{
  __off_t __pos;
  __mbstate_t __state;
} _G_fpos_t;
typedef struct
{
  __off64_t __pos;
  __mbstate_t __state;
} _G_fpos64_t;
# 36 "/usr/include/x86_64-linux-gnu/bits/libio.h" 2 3 4
# 53 "/usr/include/x86_64-linux-gnu/bits/libio.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h" 1 3 4
# 40 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h" 3 4
typedef __builtin_va_list __gnuc_va_list;
# 54 "/usr/include/x86_64-linux-gnu/bits/libio.h" 2 3 4
# 149 "/usr/include/x86_64-linux-gnu/bits/libio.h" 3 4
struct _IO_jump_t; struct _IO_FILE;


typedef void _IO_lock_t;



struct _IO_marker {
  struct _IO_marker *_next;
  struct _IO_FILE *_sbuf;

  int _pos;
# 177 "/usr/include/x86_64-linux-gnu/bits/libio.h" 3 4
};


enum __codecvt_result
{
  __codecvt_ok,
  __codecvt_partial,
  __codecvt_error,
  __codecvt_noconv
};
# 245 "/usr/include/x86_64-linux-gnu/bits/libio.h" 3 4
struct _IO_FILE {
  int _flags;


  char* _IO_read_ptr;
  char* _IO_read_end;
  char* _IO_read_base;
  char* _IO_write_base;
  char* _IO_write_ptr;
  char* _IO_write_end;
  char* _IO_buf_base;
  char* _IO_buf_end;

  char *_IO_save_base;
  char *_IO_backup_base;
  char *_IO_save_end;

  struct _IO_marker *_markers;

  struct _IO_FILE *_chain;

  int _fileno;


  int _flags2;

  __off_t _old_offset;



  unsigned short _cur_column;
  signed char _vtable_offset;
  char _shortbuf[1];


  _IO_lock_t *_lock;
# 293 "/usr/include/x86_64-linux-gnu/bits/libio.h" 3 4
  __off64_t _offset;



  void *__pad1;
  void *__pad2;
  void *__pad3;
  void *__pad4;

  size_t __pad5;
  int _mode;

  char _unused2[15 * sizeof (int) - 4 * sizeof (void *) - sizeof (size_t)];

};


typedef struct _IO_FILE _IO_FILE;


struct _IO_FILE_plus;

extern struct _IO_FILE_plus _IO_2_1_stdin_;
extern struct _IO_FILE_plus _IO_2_1_stdout_;
extern struct _IO_FILE_plus _IO_2_1_stderr_;
# 337 "/usr/include/x86_64-linux-gnu/bits/libio.h" 3 4
typedef __ssize_t __io_read_fn (void *__cookie, char *__buf, size_t __nbytes);


typedef __ssize_t __io_write_fn (void *__cookie, const char *__buf,
     size_t __n);


typedef int __io_seek_fn (void *__cookie, __off64_t *__pos, int __w);


typedef int __io_close_fn (void *__cookie);
# 389 "/usr/include/x86_64-linux-gnu/bits/libio.h" 3 4
extern int __underflow (_IO_FILE *);
extern int __uflow (_IO_FILE *);
extern int __overflow (_IO_FILE *, int);
# 433 "/usr/include/x86_64-linux-gnu/bits/libio.h" 3 4
extern int _IO_getc (_IO_FILE *__fp);
extern int _IO_putc (int __c, _IO_FILE *__fp);
extern int _IO_feof (_IO_FILE *__fp) __attribute__ ((__nothrow__ , __leaf__));
extern int _IO_ferror (_IO_FILE *__fp) __attribute__ ((__nothrow__ , __leaf__));

extern int _IO_peekc_locked (_IO_FILE *__fp);


extern void _IO_flockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
extern void _IO_funlockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
extern int _IO_ftrylockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
# 462 "/usr/include/x86_64-linux-gnu/bits/libio.h" 3 4
extern int _IO_vfscanf (_IO_FILE * __restrict, const char * __restrict,
   __gnuc_va_list, int *__restrict);
extern int _IO_vfprintf (_IO_FILE *__restrict, const char *__restrict,
    __gnuc_va_list);
extern __ssize_t _IO_padn (_IO_FILE *, int, __ssize_t);
extern size_t _IO_sgetn (_IO_FILE *, void *, size_t);

extern __off64_t _IO_seekoff (_IO_FILE *, __off64_t, int, int);
extern __off64_t _IO_seekpos (_IO_FILE *, __off64_t, int);

extern void _IO_free_backup_area (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
# 42 "/usr/include/stdio.h" 2 3 4


typedef __gnuc_va_list va_list;
# 57 "/usr/include/stdio.h" 3 4
typedef __off_t off_t;
# 71 "/usr/include/stdio.h" 3 4
typedef __ssize_t ssize_t;


typedef _G_fpos_t fpos_t;
# 131 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/stdio_lim.h" 1 3 4
# 132 "/usr/include/stdio.h" 2 3 4

extern struct _IO_FILE *stdin;
extern struct _IO_FILE *stdout;
extern struct _IO_FILE *stderr;


extern int remove (const char *__filename) __attribute__ ((__nothrow__ , __leaf__));

extern int rename (const char *__old, const char *__new) __attribute__ ((__nothrow__ , __leaf__));


extern int renameat (int __oldfd, const char *__old, int __newfd,
       const char *__new) __attribute__ ((__nothrow__ , __leaf__));


extern FILE *tmpfile (void) ;
# 173 "/usr/include/stdio.h" 3 4
extern char *tmpnam (char *__s) __attribute__ ((__nothrow__ , __leaf__)) ;

extern char *tmpnam_r (char *__s) __attribute__ ((__nothrow__ , __leaf__)) ;
# 190 "/usr/include/stdio.h" 3 4
extern char *tempnam (const char *__dir, const char *__pfx)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) ;


extern int fclose (FILE *__stream);


extern int fflush (FILE *__stream);
# 213 "/usr/include/stdio.h" 3 4
extern int fflush_unlocked (FILE *__stream);
# 232 "/usr/include/stdio.h" 3 4
extern FILE *fopen (const char *__restrict __filename,
      const char *__restrict __modes) ;


extern FILE *freopen (const char *__restrict __filename,
        const char *__restrict __modes,
        FILE *__restrict __stream) ;
# 265 "/usr/include/stdio.h" 3 4
extern FILE *fdopen (int __fd, const char *__modes) __attribute__ ((__nothrow__ , __leaf__)) ;
# 278 "/usr/include/stdio.h" 3 4
extern FILE *fmemopen (void *__s, size_t __len, const char *__modes)
  __attribute__ ((__nothrow__ , __leaf__)) ;

extern FILE *open_memstream (char **__bufloc, size_t *__sizeloc) __attribute__ ((__nothrow__ , __leaf__)) ;


extern void setbuf (FILE *__restrict __stream, char *__restrict __buf) __attribute__ ((__nothrow__ , __leaf__));

extern int setvbuf (FILE *__restrict __stream, char *__restrict __buf,
      int __modes, size_t __n) __attribute__ ((__nothrow__ , __leaf__));


extern void setbuffer (FILE *__restrict __stream, char *__restrict __buf,
         size_t __size) __attribute__ ((__nothrow__ , __leaf__));


extern void setlinebuf (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));


extern int fprintf (FILE *__restrict __stream,
      const char *__restrict __format, ...);

extern int printf (const char *__restrict __format, ...);

extern int sprintf (char *__restrict __s,
      const char *__restrict __format, ...) __attribute__ ((__nothrow__));


extern int vfprintf (FILE *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg);

extern int vprintf (const char *__restrict __format, __gnuc_va_list __arg);

extern int vsprintf (char *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg) __attribute__ ((__nothrow__));



extern int snprintf (char *__restrict __s, size_t __maxlen,
       const char *__restrict __format, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 4)));

extern int vsnprintf (char *__restrict __s, size_t __maxlen,
        const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 0)));
# 365 "/usr/include/stdio.h" 3 4
extern int vdprintf (int __fd, const char *__restrict __fmt,
       __gnuc_va_list __arg)
     __attribute__ ((__format__ (__printf__, 2, 0)));
extern int dprintf (int __fd, const char *__restrict __fmt, ...)
     __attribute__ ((__format__ (__printf__, 2, 3)));


extern int fscanf (FILE *__restrict __stream,
     const char *__restrict __format, ...) ;


extern int scanf (const char *__restrict __format, ...) ;

extern int sscanf (const char *__restrict __s,
     const char *__restrict __format, ...) __attribute__ ((__nothrow__ , __leaf__));
# 395 "/usr/include/stdio.h" 3 4
extern int fscanf (FILE *__restrict __stream, const char *__restrict __format, ...) __asm__ ("" "__isoc99_fscanf")

                               ;
extern int scanf (const char *__restrict __format, ...) __asm__ ("" "__isoc99_scanf")
                              ;
extern int sscanf (const char *__restrict __s, const char *__restrict __format, ...) __asm__ ("" "__isoc99_sscanf") __attribute__ ((__nothrow__ , __leaf__))

                      ;
# 420 "/usr/include/stdio.h" 3 4
extern int vfscanf (FILE *__restrict __s, const char *__restrict __format,
      __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 2, 0))) ;


extern int vscanf (const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 1, 0))) ;


extern int vsscanf (const char *__restrict __s,
      const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__format__ (__scanf__, 2, 0)));
# 443 "/usr/include/stdio.h" 3 4
extern int vfscanf (FILE *__restrict __s, const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vfscanf")


     __attribute__ ((__format__ (__scanf__, 2, 0))) ;
extern int vscanf (const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vscanf")

     __attribute__ ((__format__ (__scanf__, 1, 0))) ;
extern int vsscanf (const char *__restrict __s, const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vsscanf") __attribute__ ((__nothrow__ , __leaf__))


     __attribute__ ((__format__ (__scanf__, 2, 0)));
# 477 "/usr/include/stdio.h" 3 4
extern int fgetc (FILE *__stream);
extern int getc (FILE *__stream);


extern int getchar (void);
# 495 "/usr/include/stdio.h" 3 4
extern int getc_unlocked (FILE *__stream);
extern int getchar_unlocked (void);
# 506 "/usr/include/stdio.h" 3 4
extern int fgetc_unlocked (FILE *__stream);
# 517 "/usr/include/stdio.h" 3 4
extern int fputc (int __c, FILE *__stream);
extern int putc (int __c, FILE *__stream);


extern int putchar (int __c);
# 537 "/usr/include/stdio.h" 3 4
extern int fputc_unlocked (int __c, FILE *__stream);


extern int putc_unlocked (int __c, FILE *__stream);
extern int putchar_unlocked (int __c);

extern int getw (FILE *__stream);

extern int putw (int __w, FILE *__stream);


extern char *fgets (char *__restrict __s, int __n, FILE *__restrict __stream)
     ;
# 603 "/usr/include/stdio.h" 3 4
extern __ssize_t __getdelim (char **__restrict __lineptr,
          size_t *__restrict __n, int __delimiter,
          FILE *__restrict __stream) ;
extern __ssize_t getdelim (char **__restrict __lineptr,
        size_t *__restrict __n, int __delimiter,
        FILE *__restrict __stream) ;

extern __ssize_t getline (char **__restrict __lineptr,
       size_t *__restrict __n,
       FILE *__restrict __stream) ;

extern int fputs (const char *__restrict __s, FILE *__restrict __stream);


extern int puts (const char *__s);


extern int ungetc (int __c, FILE *__stream);


extern size_t fread (void *__restrict __ptr, size_t __size,
       size_t __n, FILE *__restrict __stream) ;


extern size_t fwrite (const void *__restrict __ptr, size_t __size,
        size_t __n, FILE *__restrict __s);
# 673 "/usr/include/stdio.h" 3 4
extern size_t fread_unlocked (void *__restrict __ptr, size_t __size,
         size_t __n, FILE *__restrict __stream) ;
extern size_t fwrite_unlocked (const void *__restrict __ptr, size_t __size,
          size_t __n, FILE *__restrict __stream);


extern int fseek (FILE *__stream, long int __off, int __whence);


extern long int ftell (FILE *__stream) ;


extern void rewind (FILE *__stream);
# 707 "/usr/include/stdio.h" 3 4
extern int fseeko (FILE *__stream, __off_t __off, int __whence);


extern __off_t ftello (FILE *__stream) ;
# 731 "/usr/include/stdio.h" 3 4
extern int fgetpos (FILE *__restrict __stream, fpos_t *__restrict __pos);


extern int fsetpos (FILE *__stream, const fpos_t *__pos);
# 757 "/usr/include/stdio.h" 3 4
extern void clearerr (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));

extern int feof (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;

extern int ferror (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;


extern void clearerr_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));
extern int feof_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;
extern int ferror_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;


extern void perror (const char *__s);

# 1 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h" 1 3 4
# 26 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h" 3 4
extern int sys_nerr;
extern const char *const sys_errlist[];
# 782 "/usr/include/stdio.h" 2 3 4


extern int fileno (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;

extern int fileno_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;
# 800 "/usr/include/stdio.h" 3 4
extern FILE *popen (const char *__command, const char *__modes) ;

extern int pclose (FILE *__stream);

extern char *ctermid (char *__s) __attribute__ ((__nothrow__ , __leaf__));
# 840 "/usr/include/stdio.h" 3 4
extern void flockfile (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));

extern int ftrylockfile (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;


extern void funlockfile (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));
# 868 "/usr/include/stdio.h" 3 4

# 3 "Ab.c" 2


# 4 "Ab.c"
int main() {
  int i,j;
  float detA;
  float A[2][2];
   for (i=0; i<2; i++) {
      for (j=0; j<2; j++) {
         printf("A[%d][%d]= ", i,j);
         scanf("%f", &A[i][j]);
      }
   }
   for (i=0; i<2; i++) {
      for (j=0; j<2; j++) {
         if (j<1)
         printf("%f ", A[i][j]);
         else
         printf("%f \n", A[i][j]);
      }
   }

   detA = (A[0][0]*A[1][1]-A[0][1]*A[1][0]);
   printf("DetA=%f", detA);


     return 0;
}
igor@igor-Aspire-A315-53G:~/Рабочий стол/L08$ gcc -S Ab.c >> Ab.e && ls
Ab.c  Ab.e  Ab.s
igor@igor-Aspire-A315-53G:~/Рабочий стол/L08$ cat Ab.s
	.file	"Ab.c"
	.text
	.section	.rodata
.LC0:
	.string	"A[%d][%d]= "
.LC1:
	.string	"%f"
.LC2:
	.string	"%f "
.LC3:
	.string	"%f \n"
.LC4:
	.string	"DetA=%f"
	.text
	.globl	main
	.type	main, @function
main:
.LFB0:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	movl	$0, -44(%rbp)
	jmp	.L2
.L5:
	movl	$0, -40(%rbp)
	jmp	.L3
.L4:
	movl	-40(%rbp), %edx
	movl	-44(%rbp), %eax
	movl	%eax, %esi
	leaq	.LC0(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	leaq	-32(%rbp), %rax
	movl	-40(%rbp), %edx
	movslq	%edx, %rdx
	movl	-44(%rbp), %ecx
	movslq	%ecx, %rcx
	addq	%rcx, %rcx
	addq	%rcx, %rdx
	salq	$2, %rdx
	addq	%rdx, %rax
	movq	%rax, %rsi
	leaq	.LC1(%rip), %rdi
	movl	$0, %eax
	call	__isoc99_scanf@PLT
	addl	$1, -40(%rbp)
.L3:
	cmpl	$1, -40(%rbp)
	jle	.L4
	addl	$1, -44(%rbp)
.L2:
	cmpl	$1, -44(%rbp)
	jle	.L5
	movl	$0, -44(%rbp)
	jmp	.L6
.L11:
	movl	$0, -40(%rbp)
	jmp	.L7
.L10:
	cmpl	$0, -40(%rbp)
	jg	.L8
	movl	-40(%rbp), %eax
	cltq
	movl	-44(%rbp), %edx
	movslq	%edx, %rdx
	addq	%rdx, %rdx
	addq	%rdx, %rax
	movss	-32(%rbp,%rax,4), %xmm0
	cvtss2sd	%xmm0, %xmm0
	leaq	.LC2(%rip), %rdi
	movl	$1, %eax
	call	printf@PLT
	jmp	.L9
.L8:
	movl	-40(%rbp), %eax
	cltq
	movl	-44(%rbp), %edx
	movslq	%edx, %rdx
	addq	%rdx, %rdx
	addq	%rdx, %rax
	movss	-32(%rbp,%rax,4), %xmm0
	cvtss2sd	%xmm0, %xmm0
	leaq	.LC3(%rip), %rdi
	movl	$1, %eax
	call	printf@PLT
.L9:
	addl	$1, -40(%rbp)
.L7:
	cmpl	$1, -40(%rbp)
	jle	.L10
	addl	$1, -44(%rbp)
.L6:
	cmpl	$1, -44(%rbp)
	jle	.L11
	movss	-32(%rbp), %xmm1
	movss	-20(%rbp), %xmm0
	mulss	%xmm1, %xmm0
	movss	-28(%rbp), %xmm2
	movss	-24(%rbp), %xmm1
	mulss	%xmm2, %xmm1
	subss	%xmm1, %xmm0
	movss	%xmm0, -36(%rbp)
	cvtss2sd	-36(%rbp), %xmm0
	leaq	.LC4(%rip), %rdi
	movl	$1, %eax
	call	printf@PLT
	movl	$0, %eax
	movq	-8(%rbp), %rsi
	xorq	%fs:40, %rsi
	je	.L13
	call	__stack_chk_fail@PLT
.L13:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE0:
	.size	main, .-main
	.ident	"GCC: (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0"
	.section	.note.GNU-stack,"",@progbits

igor@igor-Aspire-A315-53G:~/Рабочий стол/L08$ gcc -C Ab.c >> Ab.e && ls
Ab.c  Ab.e  Ab.s  a.out
igor@igor-Aspire-A315-53G:~/Рабочий стол/L08$ ./a.out
A[0][0]= 2
A[0][1]= 6
A[1][0]= 4
A[1][1]= 7
2.000000 6.000000 
4.000000 7.000000 
DetA=-10.000000
igor@igor-Aspire-A315-53G:~/Рабочий стол/L08$ gcc Ab.c && ls
Ab.c  Ab.e  Ab.s  a.out
igor@igor-Aspire-A315-53G:~/Рабочий стол/L08$ gcc -std=c99 -Wall -pedantic Ab.c
igor@igor-Aspire-A315-53G:~/Рабочий стол/L08$ gcc -std=c89 -Wall -pedantic Ab.c
igor@igor-Aspire-A315-53G:~/Рабочий стол/L08$ gcc -std=c90 -Wall -pedantic Ab.c
igor@igor-Aspire-A315-53G:~/Рабочий стол/L08$ gcc -std=c11 -Wall -pedantic Ab.c
igor@igor-Aspire-A315-53G:~/Рабочий стол/L08$ cat Ab.c

#include <stdio.h>

int main() {
  int i,j;
  float detA;
  float A[2][2];
   for (i=0; i<2; i++) {
      for (j=0; j<2; j++) {
         printf("A[%d][%d]= ", i,j);
         scanf("%f", &A[i][j]);
      }
   }
   for (i=0; i<2; i++) {
      for (j=0; j<2; j++) {
         if (j<1)
         printf("%f ", A[i][j]);
         else
         printf("%f \n", A[i][j]);
      }
   }

   detA = (A[0][0]*A[1][1]-A[0][1]*A[1][0]);
   printf("DetA=%f", detA);


     return 0;
}
igor@igor-Aspire-A315-53G:~/Рабочий стол/L08$ cat Ab.c

#include <stdio.h>

int main() {
  int i,j;
  float detA;
  float A[2][2];
   for (i=0; i<2; i+++) {
      for (j=0; j<2; j++) {
         printf("A[%d][%d]= ", i,j);
         scanf("%f", &A[i][j]);
      }
   }
   for (i=0; i<2; i++)) {
      for (j=0; j<2; j++) {
         if (j<1)
         printf("%f ", A[i][j]);
         else
         printf("%f \n", A[i][j]);
      }
   }

   detA = (A[0][0]*A[1][1]-A[0][1]*A[1][0]);
   printf("DetA=%f", detA);


     return 0;
}
igor@igor-Aspire-A315-53G:~/Рабочий стол/L08$ gcc -Wall Ab.c
Ab.c: In function ‘main’:
Ab.c:8:23: error: expected expression before ‘)’ token
    for (i=0; i<2; i+++) {
                       ^
Ab.c:14:23: error: expected statement before ‘)’ token
    for (i=0; i<2; i++)) {
                       ^
Ab.c:14:4: warning: this ‘for’ clause does not guard... [-Wmisleading-indentation]
    for (i=0; i<2; i++)) {
    ^~~
Ab.c:14:25: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
    for (i=0; i<2; i++)) {
                         ^
igor@igor-Aspire-A315-53G:~/Рабочий стол/L08$ gcc Ab.c
Ab.c: In function ‘main’:
Ab.c:8:23: error: expected expression before ‘)’ token
    for (i=0; i<2; i+++) {
                       ^
Ab.c:14:23: error: expected statement before ‘)’ token
    for (i=0; i<2; i++)) {
                       ^
igor@igor-Aspire-A315-53G:~/Рабочий стол/L08$ cat Ab.c

#include <stdio.h>

int main() {
  int i,j;
  float detA;
  float A[2][2];
   for (i=0; i<2; i++) {
      for (j=0; j<2; j++) {
         printf("A[%d][%d]= ", i,j);
         scanf("%f", &A[i][j]);
      }
   }
   for (i=0; i<2; i++) {
      for (j=0; j<2; j++) {
         if (j<1)
         printf("%f ", A[i][j]);
         else
         printf("%d \n", A[i][j]);
      }
   }

   detA = (A[0][0]*A[1][1]-A[0][1]*A[1][0]);
   printf("DetA=%f", detA);


     return 0;
}
igor@igor-Aspire-A315-53G:~/Рабочий стол/L08$ gcc Ab.c
Ab.c: In function ‘main’:
Ab.c:19:19: warning: format ‘%d’ expects argument of type ‘int’, but argument 2 has type ‘double’ [-Wformat=]
          printf("%d \n", A[i][j]);
                  ~^      ~~~~~~~
                  %f
igor@igor-Aspire-A315-53G:~/Рабочий стол/L08$ gcc -Wall Ab.c
Ab.c: In function ‘main’:
Ab.c:19:19: warning: format ‘%d’ expects argument of type ‘int’, but argument 2 has type ‘double’ [-Wformat=]
          printf("%d \n", A[i][j]);
                  ~^      ~~~~~~~
                  %f
igor@igor-Aspire-A315-53G:~/Рабочий стол/L08$ cat Ab.c

#include <stdio.h>

int main() {
  int i,j;
  float detA;
  float A[2][2];
   for (i=0; i<2; i++) {
      for (j=0; j<2; j++) {
         printf("A[%d][%d]= ", i,j);
         scanf("%f", &A[i][j]);
      }
   }
   for (i=0; i<2; i++) {
      for (j=0; j<2; j++) {
         if (j<1)
         printf("%f ", A[i][j]);
         else
         printf("%f \n", A[i][j]);
      }
   }

   detA = (A[0][0]*A[1][1]-A[0][1]*A[1][0]);
   printf("DetA=%f", DetA);


     return 0;
}
igor@igor-Aspire-A315-53G:~/Рабочий стол/L08$ gcc Ab.c
Ab.c: In function ‘main’:
Ab.c:24:22: error: ‘DetA’ undeclared (first use in this function); did you mean ‘detA’?
    printf("DetA=%f", DetA);
                      ^~~~
                      detA
Ab.c:24:22: note: each undeclared identifier is reported only once for each function it appears in
igor@igor-Aspire-A315-53G:~/Рабочий стол/L08$ gcc -Wall Ab.c
Ab.c: In function ‘main’:
Ab.c:24:22: error: ‘DetA’ undeclared (first use in this function); did you mean ‘detA’?
    printf("DetA=%f", DetA);
                      ^~~~
                      detA
Ab.c:24:22: note: each undeclared identifier is reported only once for each function it appears in
Ab.c:6:9: warning: variable ‘detA’ set but not used [-Wunused-but-set-variable]
   float detA;
         ^~~~
igor@igor-Aspire-A315-53G:~/Рабочий стол/L08$ cat Ab.c

#include <stdio.h>

int main() {
  int i,j;
  float detA;
  float A[2][2];
   for (i=0; i<2; i++) {
      for (j=0; j<2; j++) {
         printf("A[%d][%d]= ", i,j);
         scanf("%f", &A[i][j]);
      }
   }
   for (i=0; i<2; i++) {
      for (j=0; j<2; j++) {
         if (j<1)
         printf("%d ", A[i][j]);
         else
         printf("%d \n", A[i][j]);
      }
   }

   detA = (A[0][0]*A[1][1]+A[0][1]*A[1][0]);
   printf("DetA=%f", detA);


     return 0;
}
igor@igor-Aspire-A315-53G:~/Рабочий стол/L08$ gcc Ab.c
igor@igor-Aspire-A315-53G:~/Рабочий стол/L08$ ./a.out
A[0][0]= 2
A[0][1]= 0
A[1][0]= 4
A[1][1]= 7
2.000000 0.000000 
4.000000 7.000000 
DetA=14.000000
igor@igor-Aspire-A315-53G:~/Рабочий стол/L08$ ./a.out
A[0][0]= 5
A[0][1]= 7
A[1][0]= 3
A[1][1]= 2
5.000000 7.000000 
3.000000 2.000000 
DetA=31.000000
igor@igor-Aspire-A315-53G:~/Рабочий стол/L08$ cat Ab.c

#include <stdio.h>

int main() {
  int i,j;
  float detA;
  float A[2][2];
   for (i=0; i<2; i++) {
      for (j=0; j<2; j++) {
         printf("A[%d][%d]= ", i,j);
         scanf("%f", &A[i][j]);
      }
   }
   for (i=0; i<2; i++) {
      for (j=0; j<2; j++) {
         if (j<1)
         printf("%f ", A[i][j]);
         else
         printf("%f \n", A[i][j]);
      }
   }

   detA = (A[0][0]*A[1][1]-A[0][1]*A[1][0]);
   printf("DetA=%f", A[1][1]);


     return 0;
}

igor@igor-Aspire-A315-53G:~/Рабочий стол/L08$ gcc Ab.c
igor@igor-Aspire-A315-53G:~/Рабочий стол/L08$ ./a.out
A[0][0]= 3
A[0][1]= 5
A[1][0]= 6
A[1][1]= 1
3.000000 5.000000 
6.000000 1.000000 
DetA=1.000000
igor@igor-Aspire-A315-53G:~/Рабочий стол/L08$ cat Ab.c

#include <stdio.h>

int main() {
  int i,j;
  float detA;
  float A[2][2];
   for (i=0; i<3; i++) {
      for (j=0; j<3; j++) {
         printf("A[%d][%d]= ", i,j);
         scanf("%f", &A[i][j]);
      }
   }
   for (i=0; i<2; i++) {
      for (j=0; j<2; j++) {
         if (j<1)
         printf("%f ", A[i][j]);
         else
         printf("%f \n", A[i][j]);
      }
   }

   detA = (A[0][0]*A[1][1]-A[0][1]*A[1][0]);
   printf("DetA=%f", detA);


     return 0;
}
igor@igor-Aspire-A315-53G:~/Рабочий стол/L08$ gcc Ab.c
igor@igor-Aspire-A315-53G:~/Рабочий стол/L08$ ./a.out
A[0][0]= 5
A[0][1]= 66
A[0][2]= 7
A[1][0]= 3
A[1][1]= 6
A[1][2]= 2
A[2][0]= 6
A[2][1]= 9
A[2][2]= 4
5.000000 66.000000 
3.000000 6.000000 
*** stack smashing detected ***: <unknown> terminated
Аварийный останов (стек памяти сброшен на диск)
igor@igor-Aspire-A315-53G:~/Рабочий стол/L08$ 

